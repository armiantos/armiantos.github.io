{"version":3,"sources":["webpack:///./src/components/Experience.tsx","webpack:///./src/data/work.ts","webpack:///./src/pages/work.tsx","webpack:///./node_modules/@material-ui/core/esm/Grid/Grid.js"],"names":["useStyles","makeStyles","theme","large","objectFit","boxSizing","width","height","padding","margin","h5","marginRight","toShortString","date","getMonth","getFullYear","Experience","employer","location","title","summary","duration","classes","Grid","container","justify","alignItems","item","sm","className","alt","name","src","logo","Box","display","Typography","variant","align","color","map","i","key","work","Date","root","spacing","opacity","marginTop","WorkPage","useEffect","anime","targets","translateY","easing","delay","stagger","gutterBottom","Container","maxWidth","direction","experience","xs","Paper","elevation","SPACINGS","GRID_SIZES","getOffset","val","div","arguments","length","undefined","parse","parseFloat","concat","String","replace","props","ref","_props$alignContent","alignContent","_props$alignItems","classNameProp","_props$component","component","Component","_props$container","_props$direction","_props$item","_props$justify","_props$lg","lg","_props$md","md","_props$sm","_props$spacing","_props$wrap","wrap","_props$xl","xl","_props$xs","_props$zeroMinWidth","zeroMinWidth","other","StyledGrid","flexWrap","minWidth","flexDirection","justifyContent","breakpoint","styles","forEach","themeSpacing","generateGutter","breakpoints","keys","reduce","accumulator","globalStyles","size","Math","round","flexBasis","flexGrow","up","generateGrid"],"mappings":"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","file":"component---src-pages-work-tsx-a96512c4c38fc0f5c91f.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\ntype ExperienceProps = {\n    employer: {\n        name: string;\n        logo?: string;\n    };\n    duration: Date[];\n    location: string;\n    title: string;\n    summary: string[];\n};\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        objectFit: 'contain',\n        boxSizing: 'border-box',\n        width: '100%',\n        height: '100%',\n        padding: '5%',\n        margin: 'auto',\n    },\n    h5: {\n        marginRight: '.5em',\n    },\n}));\n\nfunction toShortString(date: Date): String {\n    const monthNames = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    return `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nfunction Experience({ employer, location, title, summary, duration }: ExperienceProps) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item sm={4}>\n                <img className={classes.large} alt={`${employer.name}-logo`} src={employer.logo} />\n            </Grid>\n            <Grid item sm={7}>\n                <Box display=\"flex\" alignItems=\"baseline\">\n                    <Typography variant=\"h5\" align=\"left\" className={classes.h5}>\n                        {employer.name}\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\">\n                        {location}\n                    </Typography>\n                </Box>\n\n                <Typography variant=\"subtitle1\" align=\"left\">\n                    {title}\n                </Typography>\n\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\">\n                    {`${toShortString(duration[0])} - ${toShortString(duration[1])}`}\n                </Typography>\n\n                <ul>\n                    {summary.map((item, i) => (\n                        <li key={i}>\n                            <Typography variant=\"body1\" align=\"left\">\n                                {item}\n                            </Typography>\n                        </li>\n                    ))}\n                </ul>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Experience;\n","const work = [\n    {\n        employer: {\n            name: 'Microsoft',\n            logo: '/img/logo/microsoft.png',\n        },\n        duration: [new Date(2020, 4), new Date(2020, 7)],\n        location: 'Vancouver',\n        title: 'Software Engineer Intern',\n        summary: [\n            'Defined and implemented a scalable code and data architecture for my project',\n            'Delivered efficient, well-structured, testable, and documented technical deliverables on time',\n            'Designed important components through specs and kept the bug backlog under control',\n        ],\n    },\n    {\n        employer: {\n            name: 'Nokia',\n            logo: '/img/logo/nokia.png',\n        },\n        duration: [new Date(2020, 0), new Date(2020, 3)],\n        location: 'Kanata',\n        title: 'Security Developer Intern',\n        summary: [\n            'Maintained custom RPM, docker, and helm deployment of Keycloak',\n            'Created a generic system to upload custom jar modules to Keycloak helm via init-containers and config-maps',\n            'Wrote a Jenkins pipeline to automate Keycloak Centos8 tests',\n        ],\n    },\n    {\n        employer: {\n            name: 'University of Alberta',\n            logo: '/img/logo/uofa.png',\n        },\n        duration: [new Date(2019, 4), new Date(2019, 7)],\n        location: 'Edmonton',\n        title: 'Research Assistant',\n        summary: [\n            'Designed a scalable database manager app in WPF (C#/XAML) to easily view and download data from mongoDB, Cassandra, MySQL, and CosmosDB',\n            'Wrote a C#/Java interface to pipe 6000+ tags per second from OPC-DA server to mongoDB, Cassandra, MySQL',\n            'Set-up a Hadoop and mongoDB cluster to process Big Data ',\n        ],\n    },\n];\n\nexport default work;\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Experience from '../components/Experience';\nimport anime from 'animejs';\n// import './Work.css'; TODO: Fix css imports\n\nimport work from '../data/work';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n        opacity: 0, // Prevent flash before animation starts\n    },\n    title: {\n        marginTop: '50px',\n    },\n}));\n\nconst WorkPage = () => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        anime({\n            targets: '.experience',\n            translateY: ['-20px', 0],\n            opacity: [0, 1],\n            easing: 'easeOutCubic',\n            duration: 1000,\n            delay: anime.stagger(200),\n        });\n    }, []);\n\n    return (\n        <div className=\"Work\">\n            <Typography variant=\"h3\" className={classes.title} gutterBottom>\n                My work experience\n            </Typography>\n            <Container maxWidth=\"md\">\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    {work.map((experience) => (\n                        <Grid item xs={12} key={experience.employer.name}>\n                            <Paper elevation={0} className={classes.root + ' experience'}>\n                                <Experience\n                                    employer={experience.employer}\n                                    location={experience.location}\n                                    title={experience.title}\n                                    summary={experience.summary}\n                                    duration={experience.duration}\n                                />\n                            </Paper>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    );\n};\n\nexport default WorkPage;\n","import \"core-js/modules/es.array.reduce.js\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\"; // A grid component using the following libs as inspiration.\n//\n// For the implementation:\n// - https://getbootstrap.com/docs/4.3/layout/grid/\n// - https://github.com/kristoferjoseph/flexboxgrid/blob/master/src/css/flexboxgrid.css\n// - https://github.com/roylee0704/react-flexbox-grid\n// - https://material.angularjs.org/latest/layout/introduction\n//\n// Follow this flexbox Guide to better understand the underlying model:\n// - https://css-tricks.com/snippets/css/a-guide-to-flexbox/\n\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport withStyles from '../styles/withStyles';\nimport requirePropFactory from '../utils/requirePropFactory';\nvar SPACINGS = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10];\nvar GRID_SIZES = ['auto', true, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12];\n\nfunction generateGrid(globalStyles, theme, breakpoint) {\n  var styles = {};\n  GRID_SIZES.forEach(function (size) {\n    var key = \"grid-\".concat(breakpoint, \"-\").concat(size);\n\n    if (size === true) {\n      // For the auto layouting\n      styles[key] = {\n        flexBasis: 0,\n        flexGrow: 1,\n        maxWidth: '100%'\n      };\n      return;\n    }\n\n    if (size === 'auto') {\n      styles[key] = {\n        flexBasis: 'auto',\n        flexGrow: 0,\n        maxWidth: 'none'\n      };\n      return;\n    } // Keep 7 significant numbers.\n\n\n    var width = \"\".concat(Math.round(size / 12 * 10e7) / 10e5, \"%\"); // Close to the bootstrap implementation:\n    // https://github.com/twbs/bootstrap/blob/8fccaa2439e97ec72a4b7dc42ccc1f649790adb0/scss/mixins/_grid.scss#L41\n\n    styles[key] = {\n      flexBasis: width,\n      flexGrow: 0,\n      maxWidth: width\n    };\n  }); // No need for a media query for the first size.\n\n  if (breakpoint === 'xs') {\n    _extends(globalStyles, styles);\n  } else {\n    globalStyles[theme.breakpoints.up(breakpoint)] = styles;\n  }\n}\n\nfunction getOffset(val) {\n  var div = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var parse = parseFloat(val);\n  return \"\".concat(parse / div).concat(String(val).replace(String(parse), '') || 'px');\n}\n\nfunction generateGutter(theme, breakpoint) {\n  var styles = {};\n  SPACINGS.forEach(function (spacing) {\n    var themeSpacing = theme.spacing(spacing);\n\n    if (themeSpacing === 0) {\n      return;\n    }\n\n    styles[\"spacing-\".concat(breakpoint, \"-\").concat(spacing)] = {\n      margin: \"-\".concat(getOffset(themeSpacing, 2)),\n      width: \"calc(100% + \".concat(getOffset(themeSpacing), \")\"),\n      '& > $item': {\n        padding: getOffset(themeSpacing, 2)\n      }\n    };\n  });\n  return styles;\n} // Default CSS values\n// flex: '0 1 auto',\n// flexDirection: 'row',\n// alignItems: 'flex-start',\n// flexWrap: 'nowrap',\n// justifyContent: 'flex-start',\n\n\nexport var styles = function styles(theme) {\n  return _extends({\n    /* Styles applied to the root element. */\n    root: {},\n\n    /* Styles applied to the root element if `container={true}`. */\n    container: {\n      boxSizing: 'border-box',\n      display: 'flex',\n      flexWrap: 'wrap',\n      width: '100%'\n    },\n\n    /* Styles applied to the root element if `item={true}`. */\n    item: {\n      boxSizing: 'border-box',\n      margin: '0' // For instance, it's useful when used with a `figure` element.\n\n    },\n\n    /* Styles applied to the root element if `zeroMinWidth={true}`. */\n    zeroMinWidth: {\n      minWidth: 0\n    },\n\n    /* Styles applied to the root element if `direction=\"column\"`. */\n    'direction-xs-column': {\n      flexDirection: 'column'\n    },\n\n    /* Styles applied to the root element if `direction=\"column-reverse\"`. */\n    'direction-xs-column-reverse': {\n      flexDirection: 'column-reverse'\n    },\n\n    /* Styles applied to the root element if `direction=\"row-reverse\"`. */\n    'direction-xs-row-reverse': {\n      flexDirection: 'row-reverse'\n    },\n\n    /* Styles applied to the root element if `wrap=\"nowrap\"`. */\n    'wrap-xs-nowrap': {\n      flexWrap: 'nowrap'\n    },\n\n    /* Styles applied to the root element if `wrap=\"reverse\"`. */\n    'wrap-xs-wrap-reverse': {\n      flexWrap: 'wrap-reverse'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"center\"`. */\n    'align-items-xs-center': {\n      alignItems: 'center'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-start\"`. */\n    'align-items-xs-flex-start': {\n      alignItems: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"flex-end\"`. */\n    'align-items-xs-flex-end': {\n      alignItems: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignItems=\"baseline\"`. */\n    'align-items-xs-baseline': {\n      alignItems: 'baseline'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"center\"`. */\n    'align-content-xs-center': {\n      alignContent: 'center'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-start\"`. */\n    'align-content-xs-flex-start': {\n      alignContent: 'flex-start'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"flex-end\"`. */\n    'align-content-xs-flex-end': {\n      alignContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-between\"`. */\n    'align-content-xs-space-between': {\n      alignContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `alignContent=\"space-around\"`. */\n    'align-content-xs-space-around': {\n      alignContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"center\"`. */\n    'justify-xs-center': {\n      justifyContent: 'center'\n    },\n\n    /* Styles applied to the root element if `justify=\"flex-end\"`. */\n    'justify-xs-flex-end': {\n      justifyContent: 'flex-end'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-between\"`. */\n    'justify-xs-space-between': {\n      justifyContent: 'space-between'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-around\"`. */\n    'justify-xs-space-around': {\n      justifyContent: 'space-around'\n    },\n\n    /* Styles applied to the root element if `justify=\"space-evenly\"`. */\n    'justify-xs-space-evenly': {\n      justifyContent: 'space-evenly'\n    }\n  }, generateGutter(theme, 'xs'), theme.breakpoints.keys.reduce(function (accumulator, key) {\n    // Use side effect over immutability for better performance.\n    generateGrid(accumulator, theme, key);\n    return accumulator;\n  }, {}));\n};\nvar Grid = /*#__PURE__*/React.forwardRef(function Grid(props, ref) {\n  var _props$alignContent = props.alignContent,\n      alignContent = _props$alignContent === void 0 ? 'stretch' : _props$alignContent,\n      _props$alignItems = props.alignItems,\n      alignItems = _props$alignItems === void 0 ? 'stretch' : _props$alignItems,\n      classes = props.classes,\n      classNameProp = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$container = props.container,\n      container = _props$container === void 0 ? false : _props$container,\n      _props$direction = props.direction,\n      direction = _props$direction === void 0 ? 'row' : _props$direction,\n      _props$item = props.item,\n      item = _props$item === void 0 ? false : _props$item,\n      _props$justify = props.justify,\n      justify = _props$justify === void 0 ? 'flex-start' : _props$justify,\n      _props$lg = props.lg,\n      lg = _props$lg === void 0 ? false : _props$lg,\n      _props$md = props.md,\n      md = _props$md === void 0 ? false : _props$md,\n      _props$sm = props.sm,\n      sm = _props$sm === void 0 ? false : _props$sm,\n      _props$spacing = props.spacing,\n      spacing = _props$spacing === void 0 ? 0 : _props$spacing,\n      _props$wrap = props.wrap,\n      wrap = _props$wrap === void 0 ? 'wrap' : _props$wrap,\n      _props$xl = props.xl,\n      xl = _props$xl === void 0 ? false : _props$xl,\n      _props$xs = props.xs,\n      xs = _props$xs === void 0 ? false : _props$xs,\n      _props$zeroMinWidth = props.zeroMinWidth,\n      zeroMinWidth = _props$zeroMinWidth === void 0 ? false : _props$zeroMinWidth,\n      other = _objectWithoutProperties(props, [\"alignContent\", \"alignItems\", \"classes\", \"className\", \"component\", \"container\", \"direction\", \"item\", \"justify\", \"lg\", \"md\", \"sm\", \"spacing\", \"wrap\", \"xl\", \"xs\", \"zeroMinWidth\"]);\n\n  var className = clsx(classes.root, classNameProp, container && [classes.container, spacing !== 0 && classes[\"spacing-xs-\".concat(String(spacing))]], item && classes.item, zeroMinWidth && classes.zeroMinWidth, direction !== 'row' && classes[\"direction-xs-\".concat(String(direction))], wrap !== 'wrap' && classes[\"wrap-xs-\".concat(String(wrap))], alignItems !== 'stretch' && classes[\"align-items-xs-\".concat(String(alignItems))], alignContent !== 'stretch' && classes[\"align-content-xs-\".concat(String(alignContent))], justify !== 'flex-start' && classes[\"justify-xs-\".concat(String(justify))], xs !== false && classes[\"grid-xs-\".concat(String(xs))], sm !== false && classes[\"grid-sm-\".concat(String(sm))], md !== false && classes[\"grid-md-\".concat(String(md))], lg !== false && classes[\"grid-lg-\".concat(String(lg))], xl !== false && classes[\"grid-xl-\".concat(String(xl))]);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    className: className,\n    ref: ref\n  }, other));\n});\nprocess.env.NODE_ENV !== \"production\" ? void 0 : void 0;\nvar StyledGrid = withStyles(styles, {\n  name: 'MuiGrid'\n})(Grid);\n\nif (process.env.NODE_ENV !== 'production') {\n  var requireProp = requirePropFactory('Grid');\n  StyledGrid.propTypes = _extends({}, StyledGrid.propTypes, {\n    alignContent: requireProp('container'),\n    alignItems: requireProp('container'),\n    direction: requireProp('container'),\n    justify: requireProp('container'),\n    lg: requireProp('item'),\n    md: requireProp('item'),\n    sm: requireProp('item'),\n    spacing: requireProp('container'),\n    wrap: requireProp('container'),\n    xs: requireProp('item'),\n    zeroMinWidth: requireProp('item')\n  });\n}\n\nexport default StyledGrid;"],"sourceRoot":""}