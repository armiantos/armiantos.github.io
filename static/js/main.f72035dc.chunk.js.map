{"version":3,"sources":["components/Logo.tsx","components/Experience.tsx","data/experiences.ts","components/Portfolio.tsx","theme.ts","index.tsx"],"names":["Logo","className","width","height","viewBox","fill","xmlns","d","stroke","strokeWidth","useStyles","makeStyles","large","objectFit","boxSizing","padding","margin","Experience","employer","title","location","summary","classes","duration","Grid","container","justify","item","sm","md","lg","alt","name","src","logo","Typography","gutterBottom","variant","align","color","map","experiences","Date","theme","spacing","list","Portfolio","useEffect","anime","timeline","add","targets","easing","strokeDashoffset","setDashoffset","opacity","translateY","Avatar","direction","alignItems","experience","xs","key","createMuiTheme","typography","fontFamily","join","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.f72035dc.chunk.js","sourcesContent":["import React from 'react';\n\ntype LogoProps = {\n    className: string;\n};\n\nfunction Logo({ className }: LogoProps) {\n    return (\n        <svg className={className} width=\"807\" height=\"203\" viewBox=\"0 0 807 203\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M150 191.222V189.56L148.531 190.339C134.5 197.783 118.494 202 101.5 202C45.9954 202 1 157.005 1 101.5C1 45.9954 45.9954 1 101.5 1C157.005 1 202 45.9954 202 101.5C202 101.665 202 101.83 201.999 101.995L201.994 103H202V202H150V191.222ZM101.5 150C128.286 150 150 128.286 150 101.5C150 74.7142 128.286 53 101.5 53C74.7142 53 53 74.7142 53 101.5C53 128.286 74.7142 150 101.5 150Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path\n                d=\"M302.5 1C357.838 1 402.73 45.7254 402.999 101H350.997C350.729 74.4445 329.119 53 302.5 53C275.881 53 254.271 74.4445 254.003 101H254V101.5V102V202H202V101.5V1H254V11.7776V13.4401L255.469 12.661C269.5 5.21706 285.506 1 302.5 1Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path\n                d=\"M756 107V202H705V107C705 79.3858 682.614 57 655 57C627.386 57 605 79.3858 605 107V202H554V107C554 79.3858 531.614 57 504 57C476.386 57 454 79.3858 454 107V202H403V107V6H454V17.5187V19.2082L455.481 18.3954C469.88 10.494 486.414 6 504 6C533.632 6 560.283 18.7597 578.76 39.0876L579.5 39.9018L580.24 39.0876C598.717 18.7597 625.368 6 655 6C710.781 6 756 51.2192 756 107Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path d=\"M756 101H806V202H756V101Z\" stroke=\"#40DCC0\" strokeWidth=\"2\" />\n            <path\n                d=\"M806 31C806 44.8071 794.807 56 781 56C767.193 56 756 44.8071 756 31C756 17.1929 767.193 6 781 6C794.807 6 806 17.1929 806 31Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n        </svg>\n    );\n}\n\nexport default Logo;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\n\ntype ExperienceProps = {\n    employer: {\n        name: string;\n        logo?: string;\n    };\n    duration: Date[];\n    location: string;\n    title: string;\n    summary: string[];\n};\n\nconst useStyles = makeStyles({\n    large: {\n        objectFit: 'contain',\n        boxSizing: 'border-box',\n        width: '100%',\n        height: '100%',\n        padding: '5%',\n        margin: 'auto',\n    },\n});\n\nfunction Experience({ employer, location, title, summary, duration }: ExperienceProps) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\">\n            <Grid item sm={4} md={3} lg={2}>\n                <img className={classes.large} alt={`${employer.name}-logo`} src={employer.logo} />\n            </Grid>\n            <Grid item sm={7} md={6} lg={5}>\n                <Typography gutterBottom variant=\"h5\" align=\"left\">\n                    {employer.name}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\">\n                    {title}\n                </Typography>\n                <ul>\n                    {summary.map((item) => (\n                        <li>\n                            <Typography variant=\"body1\" align=\"left\">\n                                {item}\n                            </Typography>\n                        </li>\n                    ))}\n                </ul>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Experience;\n","const experiences = [\n    {\n        employer: {\n            name: 'Microsoft',\n            logo: '/img/logo/microsoft.png',\n        },\n        duration: [new Date(2020, 5), new Date(2020, 8)],\n        location: 'Vancouver',\n        title: 'Software Engineer Intern',\n        summary: [\n            'Defined and implemented a scalable code and data architecture for my project',\n            'Delivered efficient, well-structured, testable, and documented technical deliverables on time',\n            'Designed important components through specs and kept the bug backlog under control',\n        ],\n    },\n    {\n        employer: {\n            name: 'Nokia',\n            logo: '/img/logo/nokia.png',\n        },\n        duration: [new Date(2020, 1), new Date(2020, 4)],\n        location: 'Kanata',\n        title: 'Security Developer Intern',\n        summary: [\n            'Maintained custom RPM, docker, and helm deployment of Keycloak',\n            'Created a generic system to upload custom jar modules to Keycloak helm via init-containers and config-maps',\n            'Wrote a Jenkins pipeline to automate Keycloak Centos8 tests',\n        ],\n    },\n    {\n        employer: {\n            name: 'University of Alberta',\n            logo: '/img/logo/uofa.png',\n        },\n        duration: [new Date(2019, 5), new Date(2020, 8)],\n        location: 'Edmonton',\n        title: 'Research Assistant',\n        summary: [\n            'Designed a scalable database manager app in WPF (C#/XAML) to easily view and download data from mongoDB, Cassandra, MySQL, and CosmosDB',\n            'Wrote a C#/Java interface to pipe 6000+ tags per second from OPC-DA server to mongoDB, Cassandra, MySQL',\n            'Set-up a Hadoop and mongoDB cluster to process Big Data ',\n        ],\n    },\n];\n\nexport default experiences;\n","import React, { useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Grid from '@material-ui/core/Grid';\nimport { makeStyles } from '@material-ui/core/styles';\nimport anime from 'animejs';\nimport Logo from './Logo';\nimport Experience from './Experience';\nimport './Portfolio.css';\n\nimport experiences from '../data/experiences';\n\nfunction animate() {\n    const tl = anime.timeline({});\n\n    tl.add({\n        targets: '.logo path',\n        easing: 'easeInOutSine',\n        duration: 5000,\n        strokeDashoffset: [anime.setDashoffset, 0],\n    }).add(\n        {\n            targets: '.catchphrase',\n            duration: 2000,\n            opacity: [0, 1],\n            easing: 'easeOutQuart',\n            translateY: ['5vmin', 0],\n        },\n        '-=500'\n    );\n}\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(32),\n        height: theme.spacing(32),\n        margin: `${theme.spacing(2)}px 0 ${theme.spacing(2)}px 0`\n    },\n    list: {\n        padding: `${theme.spacing(4)}px 0`,\n    }\n}));\n\nfunction Portfolio() {\n    const classes = useStyles();\n\n    useEffect(() => {\n        animate();\n    });\n\n    return (\n        <div className=\"portfolio\">\n            <header className=\"header\">\n                <Logo className=\"logo\" />\n                <p className=\"catchphrase\">\n                    I am <em>the</em> software engineer.\n                </p>\n            </header>\n\n            <div className=\"container about short\">\n                <Typography variant=\"h3\" gutterBottom>\n                    About me\n                </Typography>\n                <Avatar alt=\"Me\" src=\"/profile.jpg\" className={classes.large} />\n                <Typography variant=\"body1\">\n                    I am a 4<sup>th</sup> year Software Engineering Student at the University of Alberta. My passion is to empower others by\n                    developing programs that will greatly enhance their productivity.\n                </Typography>\n            </div>\n\n            <div className=\"container experiences\">\n                <Typography variant=\"h3\" gutterBottom>\n                    My work experience\n                </Typography>\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" className={classes.list}>\n                    {experiences.map((experience) => (\n                        <Grid item xs={12} key={experience.employer.name}>\n                            <Experience\n                                employer={experience.employer}\n                                location={experience.location}\n                                title={experience.title}\n                                summary={experience.summary}\n                                duration={experience.duration}\n                            />\n                        </Grid>\n                    ))}\n                </Grid>\n            </div>\n        </div>\n    );\n}\n\nexport default Portfolio;\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: ['Open Sans', '-apple-system', 'sans-serif'].join(','),\n    },\n});\n\nexport default responsiveFontSizes(theme);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport Portfolio from './components/Portfolio';\nimport theme from './theme';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <Portfolio />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}