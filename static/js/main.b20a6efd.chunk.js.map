{"version":3,"sources":["components/experiences/Experiences.tsx","components/logo/Logo.tsx","components/portfolio/Portfolio.tsx","index.tsx"],"names":["experiences","employer","name","logo","location","title","summary","Experience","classes","makeStyles","img","objectFit","padding","boxSizing","useStyles","Card","CardMedia","component","alt","image","height","className","CardContent","Typography","gutterBottom","variant","color","Experiences","Grid","container","spacing","direction","justify","alignItems","map","experience","item","xs","sm","md","key","Logo","width","viewBox","fill","xmlns","d","stroke","strokeWidth","App","useEffect","anime","timeline","add","targets","easing","duration","strokeDashoffset","setDashoffset","opacity","translateY","theme","createMuiTheme","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"gWAeMA,G,MAAiC,CACnC,CACIC,SAAU,CACNC,KAAM,YACNC,KAAM,2BAEVC,SAAU,YACVC,MAAO,2BACPC,QAAS,CACL,+EACA,gGACA,uFAGR,CACIL,SAAU,CACNC,KAAM,QACNC,KAAM,uBAEVC,SAAU,SACVC,MAAO,4BACPC,QAAS,CACL,iEACA,6GACA,gEAGR,CACIL,SAAU,CACNC,KAAM,wBACNC,KAAM,sBAEVC,SAAU,WACVC,MAAO,qBACPC,QAAS,CACL,0IACA,0GACA,+DAKZ,SAASC,EAAT,GAA8E,IAAxDN,EAAuD,EAAvDA,SAAoBI,GAAmC,EAA7CD,SAA6C,EAAnCC,OAQhCG,GARmE,EAA5BF,QAC3BG,YAAW,CACzBC,IAAK,CACDC,UAAW,UACXC,QAAS,QACTC,UAAW,eAGHC,IAEhB,OACI,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAWC,UAAU,MAAMC,IAAG,UAAKjB,EAASC,KAAd,SAA2BiB,MAAOlB,EAASE,KAAMiB,OAAO,MAAMC,UAAWb,EAAQE,MAC/G,kBAACY,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAYC,cAAY,EAACC,QAAQ,MAC5BxB,EAASC,MAEd,kBAACqB,EAAA,EAAD,CAAYE,QAAQ,YAAYC,MAAM,iBACjCrB,KA2BNsB,MApBf,WACI,OACI,yBAAKN,UAAU,eACX,kBAACE,EAAA,EAAD,CAAYE,QAAQ,MAApB,sBACA,kBAACG,EAAA,EAAD,CAAMC,WAAS,EAACC,QAAS,EAAGC,UAAU,MAAMC,QAAQ,SAASC,WAAW,UACnEjC,EAAYkC,KAAI,SAACC,GAAD,OACb,kBAACP,EAAA,EAAD,CAAMQ,MAAI,EAACC,GAAI,EAAGC,GAAI,EAAGC,GAAI,EAAGC,IAAKL,EAAWlC,SAASC,MACrD,kBAACK,EAAD,CACIN,SAAUkC,EAAWlC,SACrBG,SAAU+B,EAAW/B,SACrBC,MAAO8B,EAAW9B,MAClBC,QAAS6B,EAAW7B,iB,gBC3DjCmC,MA5Bf,YAAuC,IAAxBpB,EAAuB,EAAvBA,UACX,OACI,yBAAKA,UAAWA,EAAWqB,MAAM,MAAMtB,OAAO,MAAMuB,QAAQ,cAAcC,KAAK,OAAOC,MAAM,8BACxF,0BACIC,EAAE,yXACFC,OAAO,UACPC,YAAY,MAEhB,0BACIF,EAAE,qOACFC,OAAO,UACPC,YAAY,MAEhB,0BACIF,EAAE,kXACFC,OAAO,UACPC,YAAY,MAEhB,0BAAMF,EAAE,4BAA4BC,OAAO,UAAUC,YAAY,MACjE,0BACIF,EAAE,gIACFC,OAAO,UACPC,YAAY,QCiBbC,MAtCf,WAyBI,OAJAC,qBAAU,WAnBKC,IAAMC,SAAS,IAEvBC,IAAI,CACHC,QAAS,aACTC,OAAQ,gBACRC,SAAU,IACVC,iBAAkB,CAACN,IAAMO,cAAe,KACzCL,IACC,CACIC,QAAS,eACTE,SAAU,IACVG,QAAS,CAAC,EAAG,GACbJ,OAAQ,eACRK,WAAY,CAAC,QAAS,IAE1B,YASJ,yBAAKvC,UAAU,aACX,4BAAQA,UAAU,UACd,kBAAC,EAAD,CAAMA,UAAU,SAChB,uBAAGA,UAAU,eAAb,QACS,mCADT,wBAIJ,kBAAC,EAAD,QClCRwC,EAAQC,YAAe,IAC3BD,EAAQE,YAAoBF,GAE5BG,IAASC,OACL,kBAAC,IAAMC,WAAP,KACI,kBAACC,EAAA,EAAD,CAAeN,MAAOA,GAClB,kBAAC,EAAD,QAGRO,SAASC,eAAe,W","file":"static/js/main.b20a6efd.chunk.js","sourcesContent":["import React from 'react';\nimport { Card, CardMedia, CardContent, Grid, Typography } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './Experiences.css';\n\ntype ExperienceProps = {\n    employer: {\n        name: string,\n        logo?: string\n    },\n    location: string,\n    title: string,\n    summary: string[]\n};\n\nconst experiences: ExperienceProps[] = [\n    {\n        employer: {\n            name: 'Microsoft',\n            logo: '/img/logo/microsoft.png',\n        },\n        location: 'Vancouver',\n        title: 'Software Engineer Intern',\n        summary: [\n            'Defined and implemented a scalable code and data architecture for my project',\n            'Delivered efficient, well-structured, testable, and documented technical deliverables on time',\n            'Designed important components through specs and kept the bug backlog under control',\n        ],\n    },\n    {\n        employer: {\n            name: 'Nokia',\n            logo: '/img/logo/nokia.png',\n        },\n        location: 'Kanata',\n        title: 'Security Developer Intern',\n        summary: [\n            'Maintained custom RPM, docker, and helm deployment of Keycloak',\n            'Created a generic system to upload custom jar modules to Keycloak helm via init-containers and config-maps',\n            'Wrote a Jenkins pipeline to automate Keycloak Centos8 tests',\n        ],\n    },\n    {\n        employer: {\n            name: 'University of Alberta',\n            logo: '/img/logo/uofa.png',\n        },\n        location: 'Edmonton',\n        title: 'Research Assistant',\n        summary: [\n            'Designed a scalable database manager app in WPF (C#/XAML) to easily view and download data from mongoDB, Cassandra, MySQL, and CosmosDB',\n            'Wrote a C#/Java interface to pipe 6000+ tags per second from OPC-DA server to mongoDB, Cassandra, MySQL',\n            'Set-up a Hadoop and mongoDB cluster to process Big Data ',\n        ],\n    },\n];\n\nfunction Experience({ employer, location, title, summary }: ExperienceProps) {\n    const useStyles = makeStyles({\n        img: {\n            objectFit: 'contain',\n            padding: '0 10%',\n            boxSizing: 'border-box',\n        },\n    });\n    const classes = useStyles();\n\n    return (\n        <Card>\n            <CardMedia component=\"img\" alt={`${employer.name}-logo`} image={employer.logo} height=\"200\" className={classes.img}></CardMedia>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\">\n                    {employer.name}\n                </Typography>\n                <Typography variant=\"subtitle1\" color=\"textSecondary\">\n                    {title}\n                </Typography>\n            </CardContent>\n        </Card>\n    );\n}\n\nfunction Experiences() {\n    return (\n        <div className=\"experiences\">\n            <Typography variant=\"h3\">My work experience</Typography>\n            <Grid container spacing={2} direction=\"row\" justify=\"center\" alignItems=\"center\">\n                {experiences.map((experience) => (\n                    <Grid item xs={8} sm={5} md={3} key={experience.employer.name}>\n                        <Experience\n                            employer={experience.employer}\n                            location={experience.location}\n                            title={experience.title}\n                            summary={experience.summary}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n\nexport default Experiences;\n","import React from 'react';\n\ntype LogoProps = {\n    className: string\n}\n\nfunction Logo({className}: LogoProps) {\n    return (\n        <svg className={className} width=\"807\" height=\"203\" viewBox=\"0 0 807 203\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\n            <path\n                d=\"M150 191.222V189.56L148.531 190.339C134.5 197.783 118.494 202 101.5 202C45.9954 202 1 157.005 1 101.5C1 45.9954 45.9954 1 101.5 1C157.005 1 202 45.9954 202 101.5C202 101.665 202 101.83 201.999 101.995L201.994 103H202V202H150V191.222ZM101.5 150C128.286 150 150 128.286 150 101.5C150 74.7142 128.286 53 101.5 53C74.7142 53 53 74.7142 53 101.5C53 128.286 74.7142 150 101.5 150Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path\n                d=\"M302.5 1C357.838 1 402.73 45.7254 402.999 101H350.997C350.729 74.4445 329.119 53 302.5 53C275.881 53 254.271 74.4445 254.003 101H254V101.5V102V202H202V101.5V1H254V11.7776V13.4401L255.469 12.661C269.5 5.21706 285.506 1 302.5 1Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path\n                d=\"M756 107V202H705V107C705 79.3858 682.614 57 655 57C627.386 57 605 79.3858 605 107V202H554V107C554 79.3858 531.614 57 504 57C476.386 57 454 79.3858 454 107V202H403V107V6H454V17.5187V19.2082L455.481 18.3954C469.88 10.494 486.414 6 504 6C533.632 6 560.283 18.7597 578.76 39.0876L579.5 39.9018L580.24 39.0876C598.717 18.7597 625.368 6 655 6C710.781 6 756 51.2192 756 107Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n            <path d=\"M756 101H806V202H756V101Z\" stroke=\"#40DCC0\" strokeWidth=\"2\" />\n            <path\n                d=\"M806 31C806 44.8071 794.807 56 781 56C767.193 56 756 44.8071 756 31C756 17.1929 767.193 6 781 6C794.807 6 806 17.1929 806 31Z\"\n                stroke=\"#40DCC0\"\n                strokeWidth=\"2\"\n            />\n        </svg>\n    );\n}\n\nexport default Logo;\n","import React, { useEffect } from 'react';\nimport Experiences from '../experiences/Experiences';\nimport './Portfolio.css';\nimport anime from 'animejs';\n\nimport Logo from '../logo/Logo';\n\nfunction App() {\n    function animate() {\n        const tl = anime.timeline({});\n\n        tl.add({\n            targets: '.logo path',\n            easing: 'easeInOutSine',\n            duration: 5000,\n            strokeDashoffset: [anime.setDashoffset, 0],\n        }).add(\n            {\n                targets: '.catchphrase',\n                duration: 2000,\n                opacity: [0, 1],\n                easing: 'easeOutQuart',\n                translateY: ['5vmin', 0],\n            },\n            '-=500'\n        );\n    }\n\n    useEffect(() => {\n        animate();\n    });\n\n    return (\n        <div className=\"portfolio\">\n            <header className=\"header\">\n                <Logo className=\"logo\"/>\n                <p className=\"catchphrase\">\n                    I am <em>the</em> software engineer.\n                </p>\n            </header>\n            <Experiences />\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createMuiTheme, responsiveFontSizes, ThemeProvider } from '@material-ui/core';\nimport './index.css';\nimport Portfolio from './components/portfolio/Portfolio';\n\nlet theme = createMuiTheme({});\ntheme = responsiveFontSizes(theme);\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <Portfolio />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}