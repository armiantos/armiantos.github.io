{"version":3,"sources":["components/About.tsx","components/Experience.tsx","data/work.ts","components/Work.tsx","data/projects.ts","components/Projects.tsx","App.tsx","theme.ts","index.tsx"],"names":["useStyles","makeStyles","theme","large","width","spacing","height","margin","subtitle","About","classes","className","Container","maxWidth","Typography","variant","gutterBottom","Avatar","alt","src","objectFit","boxSizing","padding","h5","marginRight","toShortString","date","getMonth","getFullYear","Experience","employer","location","title","summary","duration","Grid","container","justify","alignItems","item","sm","md","lg","name","logo","Box","display","align","color","map","i","key","work","Date","marginTop","Work","direction","experience","xs","projects","source","thumbnail","img","Projects","matches","useMediaQuery","breakpoints","up","project","justifyContent","IconButton","aria-label","component","Link","href","App","CssBaseline","AppBar","position","Toolbar","Button","path","createMuiTheme","typography","fontFamily","join","overrides","MuiGrid","responsiveFontSizes","ReactDOM","render","StrictMode","ThemeProvider","document","getElementById"],"mappings":"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","file":"static/js/main.33508b70.chunk.js","sourcesContent":["import React from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Avatar from '@material-ui/core/Avatar';\nimport Container from '@material-ui/core/Container';\nimport { makeStyles } from '@material-ui/core/styles';\nimport './About.css';\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        width: theme.spacing(32),\n        height: theme.spacing(32),\n        margin: `${theme.spacing(2)}px auto`,\n    },\n    subtitle: {\n        margin: `${theme.spacing(4)}px 0`,\n    },\n}));\n\nfunction About() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"container\">\n            <Container maxWidth=\"md\">\n                <Typography variant=\"h3\" gutterBottom>\n                    Hi!\n                </Typography>\n\n                <Avatar alt=\"Me\" src=\"/profile.JPG\" className={classes.large} />\n\n                <Typography variant=\"body1\">\n                    My name is Armi. I am a 4<sup>th</sup> year Software Engineering Student at the University of Alberta.\n                </Typography>\n                <Typography variant=\"body1\">\n                    My passion is to empower others by developing programs that will enhance their productivity and pleasing to look at.\n                </Typography>\n            </Container>\n        </div>\n    );\n}\n\nexport default About;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\ntype ExperienceProps = {\n    employer: {\n        name: string;\n        logo?: string;\n    };\n    duration: Date[];\n    location: string;\n    title: string;\n    summary: string[];\n};\n\nconst useStyles = makeStyles({\n    large: {\n        objectFit: 'contain',\n        boxSizing: 'border-box',\n        width: '100%',\n        height: '100%',\n        padding: '5%',\n        margin: 'auto',\n    },\n    h5: {\n        marginRight: '.5em',\n    },\n});\n\nfunction toShortString(date: Date): String {\n    const monthNames = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    return `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nfunction Experience({ employer, location, title, summary, duration }: ExperienceProps) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item sm={4} md={3} lg={2}>\n                <img className={classes.large} alt={`${employer.name}-logo`} src={employer.logo} />\n            </Grid>\n            <Grid item sm={7} md={6} lg={5}>\n                <Box display=\"flex\" alignItems=\"baseline\">\n                    <Typography gutterBottom variant=\"h5\" align=\"left\" className={classes.h5}>\n                        {employer.name}\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\">\n                        {location}\n                    </Typography>\n                </Box>\n\n                <Typography variant=\"subtitle1\" align=\"left\" gutterBottom>\n                    {title}\n                </Typography>\n\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\">\n                    {`${toShortString(duration[0])} - ${toShortString(duration[1])}`}\n                </Typography>\n\n                <ul>\n                    {summary.map((item, i) => (\n                        <li key={i}>\n                            <Typography variant=\"body1\" align=\"left\">\n                                {item}\n                            </Typography>\n                        </li>\n                    ))}\n                </ul>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Experience;\n","const work = [\n    {\n        employer: {\n            name: 'Microsoft',\n            logo: '/img/logo/microsoft.png',\n        },\n        duration: [new Date(2020, 4), new Date(2020, 7)],\n        location: 'Vancouver',\n        title: 'Software Engineer Intern',\n        summary: [\n            'Defined and implemented a scalable code and data architecture for my project',\n            'Delivered efficient, well-structured, testable, and documented technical deliverables on time',\n            'Designed important components through specs and kept the bug backlog under control',\n        ],\n    },\n    {\n        employer: {\n            name: 'Nokia',\n            logo: '/img/logo/nokia.png',\n        },\n        duration: [new Date(2020, 0), new Date(2020, 3)],\n        location: 'Kanata',\n        title: 'Security Developer Intern',\n        summary: [\n            'Maintained custom RPM, docker, and helm deployment of Keycloak',\n            'Created a generic system to upload custom jar modules to Keycloak helm via init-containers and config-maps',\n            'Wrote a Jenkins pipeline to automate Keycloak Centos8 tests',\n        ],\n    },\n    {\n        employer: {\n            name: 'University of Alberta',\n            logo: '/img/logo/uofa.png',\n        },\n        duration: [new Date(2019, 4), new Date(2019, 7)],\n        location: 'Edmonton',\n        title: 'Research Assistant',\n        summary: [\n            'Designed a scalable database manager app in WPF (C#/XAML) to easily view and download data from mongoDB, Cassandra, MySQL, and CosmosDB',\n            'Wrote a C#/Java interface to pipe 6000+ tags per second from OPC-DA server to mongoDB, Cassandra, MySQL',\n            'Set-up a Hadoop and mongoDB cluster to process Big Data ',\n        ],\n    },\n];\n\nexport default work;\n","import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Experience from './Experience';\nimport './Work.css';\n\nimport work from '../data/work';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: '50px'\n    }\n}));\n\nfunction Work() {\n    const classes = useStyles();\n\n    return (\n        <div className=\"Work\">\n            <Typography variant=\"h3\" className={classes.title} gutterBottom>My work experience</Typography>\n            <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" >\n                {work.map((experience) => (\n                    <Grid item xs={12} key={experience.employer.name}>\n                        <Experience\n                            employer={experience.employer}\n                            location={experience.location}\n                            title={experience.title}\n                            summary={experience.summary}\n                            duration={experience.duration}\n                        />\n                    </Grid>\n                ))}\n            </Grid>\n        </div>\n    );\n}\n\nexport default Work;\n","const projects = [\n    {\n        name: 'GrokJS',\n        source: 'https://github.com/cyrusdiego/grok-js',\n        thumbnail: '/img/projects/grokjs.gif',\n        summary:\n            'This was our entry for HackED 2021. We implemented a Visual Studio Extension to help developers learn Javascript through reading. Googling for syntax can be difficult so our plugin explains code snippets that can be triggered by highlighting a code segment. The entire project was written in Typescript with the help of Acorn to parse JS files and we handle the mapping to appropriate documentation.',\n    },\n    {\n        name: 'Unlibrary',\n        source: 'https://github.com/CMPUT301F20T24/Unlibrary/', // TODO: fix thumbnail\n        thumbnail: '/img/projects/unlibrary.png',\n        summary:\n            'Unlibrary is an Android app used to track book lendings and borrowings. This was developed for a course project. With Unlibrary, people can search for books that other people have and is available for borrowing and can arrange a physical meet up to retrieve or return the book. We used Firebase as our backend service and Material design for the front end components. We used Android best practices including MVVM architecture, dependency injection using Hilt, set-up both unit and UI tests using Firebase emulator and Espresso respectively.',\n    },\n    {\n        name: 'PongAI',\n        source: 'https://github.com/n30phyte/HackEDBeta2018',\n        thumbnail: '/img/projects/pong-ai.gif',\n        summary:\n            'This was our entry for HackED Beta 2019 (the beginner friendly version of HackED). We implemented Pong from scratch in C++ using SFML and trained a model under 24 hours using Keras and Python to play against humans. Though we could not integrate the model in our game in time (the model produced outputs but we could not get our game to recognize the model outputs), we still had lots of fun (as seen in our commit messages) and was able to make it up to the semifinals.',\n    },\n    {\n        name: 'ARVP',\n        source: 'https://arvp.org/',\n        thumbnail: '/img/projects/auri-current-randomizer.png',\n        summary:\n            'I had the opportunity to help develop a self-driving underwater robot to participate in the annual RoboSub competition! The project involves developing our own simulator to reduce the number of pool trips we need to make to test our robot, use image and signal processing to locate objectives and obstacles from our camera and sonar sensors. The project uses ROS, Python and C++. One of my contributions was to add random currents to the simulator.',\n    },\n];\n\nexport default projects;\n","import React from 'react';\nimport Box from '@material-ui/core/Box';\nimport Grid from '@material-ui/core/Grid';\nimport IconButton from '@material-ui/core/IconButton';\nimport Link from '@material-ui/core/Link';\nimport Typography from '@material-ui/core/Typography';\nimport CodeIcon from '@material-ui/icons/Code';\nimport { makeStyles, Theme } from '@material-ui/core/styles';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\n\nimport projects from '../data/projects';\n\nconst useStyles = makeStyles((theme) => ({\n    title: {\n        marginTop: '50px',\n    },\n    img: {\n        maxWidth: '100%',\n    },\n}));\n\nfunction Projects() {\n    const classes = useStyles();\n    const matches = useMediaQuery((theme: Theme) => theme.breakpoints.up('sm'));\n\n    return (\n        <div className=\"Projects\">\n            <Typography variant=\"h3\" className={classes.title} gutterBottom>\n                My projects\n            </Typography>\n\n            {projects.map((project) => (\n                <Grid container justify=\"center\" key={project.name}>\n                    {project.thumbnail !== '' && (\n                        <Grid item xs={10} sm={3}>\n                            <img className={classes.img} src={project.thumbnail} alt={`${project.name}-thumbnail`} />\n                        </Grid>\n                    )}\n\n                    <Grid item xs={12} sm={7} md={4}>\n                        <Typography variant=\"h4\" gutterBottom align={matches ? 'left' : 'center'}>\n                            {project.name}\n                        </Typography>\n\n                        <Typography variant=\"body1\" align={matches ? 'left' : 'center'}>\n                            {project.summary}\n                        </Typography>\n\n                        <Box display=\"flex\" justifyContent={matches? 'flex-start': 'center'}>\n                            <IconButton aria-label=\"source\" component={Link} href={project.source}>\n                                <CodeIcon />\n                            </IconButton>\n                        </Box>\n                    </Grid>\n                </Grid>\n            ))}\n        </div>\n    );\n}\n\nexport default Projects;\n","import React from 'react';\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom';\nimport AppBar from '@material-ui/core/AppBar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Link from '@material-ui/core/Link';\n\nimport About from './components/About';\nimport Work from './components/Work';\nimport Projects from './components/Projects';\n\nimport './App.css';\nimport Container from '@material-ui/core/Container';\n\nfunction App() {\n    return (\n        <Router>\n            <CssBaseline />\n\n            <div className=\"App\">\n                <AppBar position=\"static\">\n                    <Toolbar component={'nav'}>\n                        <Container>\n                            <Button color=\"inherit\" component={Link} href=\"/#\">\n                                About\n                            </Button>\n                            <Button color=\"inherit\" component={Link} href=\"/#work\">\n                                Work\n                            </Button>\n                            <Button color=\"inherit\" component={Link} href=\"/#projects\">\n                                Projects\n                            </Button>\n                            <Button color=\"inherit\" component={Link} href=\"/ArmiantoSumitro_Resume.pdf\">\n                                Resume\n                            </Button>\n                            {/* <Button color=\"inherit\" component={Link} href=\"/design\">\n                                Design\n                            </Button> */}\n                        </Container>\n                    </Toolbar>\n                </AppBar>\n\n                {/* A <Switch> looks through its children <Route>s and\n            renders the first one that matches the current URL. */}\n                <Switch>\n                    <Route path=\"/work\">\n                        <Work />\n                    </Route>\n                    <Route path=\"/projects\">\n                        <Projects />\n                    </Route>\n                    {/* <Route path=\"/design\">\n                        <WIP />\n                    </Route> */}\n                    <Route path=\"/\">\n                        <About />\n                    </Route>\n                </Switch>\n            </div>\n        </Router>\n    );\n}\n\nexport default App;\n","import { createMuiTheme, responsiveFontSizes } from '@material-ui/core';\n\nconst theme = createMuiTheme({\n    typography: {\n        fontFamily: ['Open Sans', '-apple-system', 'sans-serif'].join(','),\n    },\n    overrides: {\n        MuiGrid: {\n            item: {\n                margin: '10px'\n            }\n        }\n    }\n});\n\nexport default responsiveFontSizes(theme);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { ThemeProvider } from '@material-ui/core';\nimport App from './App';\nimport theme from './theme';\nimport './index.css';\n\nReactDOM.render(\n    <React.StrictMode>\n        <ThemeProvider theme={theme}>\n            <App />\n        </ThemeProvider>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n"],"sourceRoot":""}