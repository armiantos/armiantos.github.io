{"version":3,"sources":["webpack:///./src/components/Experience.tsx","webpack:///./src/data/work.ts","webpack:///./src/pages/work.tsx"],"names":["useStyles","makeStyles","theme","large","objectFit","boxSizing","width","height","padding","margin","h5","marginRight","toShortString","date","getMonth","getFullYear","Experience","employer","location","title","summary","duration","classes","Grid","container","justify","alignItems","item","sm","className","alt","name","src","logo","Box","display","Typography","variant","align","color","map","i","key","work","Date","root","spacing","marginTop","WorkPage","useEffect","anime","targets","translateY","opacity","easing","delay","stagger","gutterBottom","Container","maxWidth","direction","experience","xs","Paper","elevation"],"mappings":"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","file":"component---src-pages-work-tsx-203b72ed7ed94ef6873e.js","sourcesContent":["import React from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\n\ntype ExperienceProps = {\n    employer: {\n        name: string;\n        logo?: string;\n    };\n    duration: Date[];\n    location: string;\n    title: string;\n    summary: string[];\n};\n\nconst useStyles = makeStyles((theme) => ({\n    large: {\n        objectFit: 'contain',\n        boxSizing: 'border-box',\n        width: '100%',\n        height: '100%',\n        padding: '5%',\n        margin: 'auto',\n    },\n    h5: {\n        marginRight: '.5em',\n    },\n}));\n\nfunction toShortString(date: Date): String {\n    const monthNames = [\n        'January',\n        'February',\n        'March',\n        'April',\n        'May',\n        'June',\n        'July',\n        'August',\n        'September',\n        'October',\n        'November',\n        'December',\n    ];\n\n    return `${monthNames[date.getMonth()]} ${date.getFullYear()}`;\n}\n\nfunction Experience({ employer, location, title, summary, duration }: ExperienceProps) {\n    const classes = useStyles();\n\n    return (\n        <Grid container justify=\"center\" alignItems=\"center\">\n            <Grid item sm={4}>\n                <img className={classes.large} alt={`${employer.name}-logo`} src={employer.logo} />\n            </Grid>\n            <Grid item sm={7}>\n                <Box display=\"flex\" alignItems=\"baseline\">\n                    <Typography variant=\"h5\" align=\"left\" className={classes.h5}>\n                        {employer.name}\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"left\" color=\"textSecondary\">\n                        {location}\n                    </Typography>\n                </Box>\n\n                <Typography variant=\"subtitle1\" align=\"left\">\n                    {title}\n                </Typography>\n\n                <Typography variant=\"subtitle1\" color=\"textSecondary\" align=\"left\">\n                    {`${toShortString(duration[0])} - ${toShortString(duration[1])}`}\n                </Typography>\n\n                <ul>\n                    {summary.map((item, i) => (\n                        <li key={i}>\n                            <Typography variant=\"body1\" align=\"left\">\n                                {item}\n                            </Typography>\n                        </li>\n                    ))}\n                </ul>\n            </Grid>\n        </Grid>\n    );\n}\n\nexport default Experience;\n","const work = [\n    {\n        employer: {\n            name: 'Microsoft',\n            logo: '/img/logo/microsoft.png',\n        },\n        duration: [new Date(2020, 4), new Date(2020, 7)],\n        location: 'Vancouver',\n        title: 'Software Engineer Intern',\n        summary: [\n            'Defined and implemented a scalable code and data architecture for my project',\n            'Delivered efficient, well-structured, testable, and documented technical deliverables on time',\n            'Designed important components through specs and kept the bug backlog under control',\n        ],\n    },\n    {\n        employer: {\n            name: 'Nokia',\n            logo: '/img/logo/nokia.png',\n        },\n        duration: [new Date(2020, 0), new Date(2020, 3)],\n        location: 'Kanata',\n        title: 'Security Developer Intern',\n        summary: [\n            'Maintained custom RPM, docker, and helm deployment of Keycloak',\n            'Created a generic system to upload custom jar modules to Keycloak helm via init-containers and config-maps',\n            'Wrote a Jenkins pipeline to automate Keycloak Centos8 tests',\n        ],\n    },\n    {\n        employer: {\n            name: 'University of Alberta',\n            logo: '/img/logo/uofa.png',\n        },\n        duration: [new Date(2019, 4), new Date(2019, 7)],\n        location: 'Edmonton',\n        title: 'Research Assistant',\n        summary: [\n            'Designed a scalable database manager app in WPF (C#/XAML) to easily view and download data from mongoDB, Cassandra, MySQL, and CosmosDB',\n            'Wrote a C#/Java interface to pipe 6000+ tags per second from OPC-DA server to mongoDB, Cassandra, MySQL',\n            'Set-up a Hadoop and mongoDB cluster to process Big Data ',\n        ],\n    },\n];\n\nexport default work;\n","import React, { useEffect } from 'react';\nimport Grid from '@material-ui/core/Grid';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Experience from '../components/Experience';\nimport anime from 'animejs';\n// import './Work.css'; TODO: Fix css imports\n\nimport work from '../data/work';\nimport Container from '@material-ui/core/Container';\n\nconst useStyles = makeStyles((theme) => ({\n    root: {\n        padding: theme.spacing(1),\n    },\n    title: {\n        marginTop: '50px',\n    },\n}));\n\nconst WorkPage = () => {\n    const classes = useStyles();\n\n    useEffect(() => {\n        anime({\n            targets: '.experience',\n            translateY: ['-20px', 0],\n            opacity: [0, 1],\n            easing: 'easeOutCubic',\n            duration: 1000,\n            delay: anime.stagger(200),\n        });\n    }, []);\n\n    return (\n        <div className=\"Work\">\n            <Typography variant=\"h3\" className={classes.title} gutterBottom>\n                My work experience\n            </Typography>\n            <Container maxWidth=\"md\">\n                <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\">\n                    {work.map((experience) => (\n                        <Grid item xs={12} key={experience.employer.name}>\n                            <Paper elevation={0} className={classes.root + ' experience'}>\n                                <Experience\n                                    employer={experience.employer}\n                                    location={experience.location}\n                                    title={experience.title}\n                                    summary={experience.summary}\n                                    duration={experience.duration}\n                                />\n                            </Paper>\n                        </Grid>\n                    ))}\n                </Grid>\n            </Container>\n        </div>\n    );\n};\n\nexport default WorkPage;\n"],"sourceRoot":""}